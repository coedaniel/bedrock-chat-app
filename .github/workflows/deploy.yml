name: Deploy Bedrock Chat App

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.9'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test --if-present
    
    - name: Build frontend
      run: npm run build

  deploy-backend:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Setup SAM CLI
      uses: aws-actions/setup-sam@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Build SAM application
      run: sam build --template-file infrastructure/backend-template.yaml
    
    - name: Deploy backend
      run: |
        sam deploy \
          --stack-name bedrock-chat-backend-prod \
          --capabilities CAPABILITY_IAM \
          --region ${{ env.AWS_REGION }} \
          --resolve-s3 \
          --no-confirm-changeset \
          --no-fail-on-empty-changeset \
          --parameter-overrides Environment=prod
    
    - name: Get API URL
      id: get-api-url
      run: |
        API_URL=$(aws cloudformation describe-stacks \
          --stack-name bedrock-chat-backend-prod \
          --region ${{ env.AWS_REGION }} \
          --query 'Stacks[0].Outputs[?OutputKey==`BedrockChatApiUrl`].OutputValue' \
          --output text)
        echo "api-url=$API_URL" >> $GITHUB_OUTPUT
    
    outputs:
      api-url: ${{ steps.get-api-url.outputs.api-url }}

  deploy-frontend:
    needs: [test, deploy-backend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Update API URL
      run: |
        sed -i "s|https://[^']*execute-api[^']*|${{ needs.deploy-backend.outputs.api-url }}|g" store/chatStore.ts
    
    - name: Build application
      run: npm run build
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    # Note: This step assumes you have Amplify app already created
    # You can also deploy to S3 + CloudFront or other hosting services
    - name: Deploy to Amplify
      run: |
        echo "Frontend built successfully!"
        echo "API URL: ${{ needs.deploy-backend.outputs.api-url }}"
        echo "Deploy the .next folder to your hosting service"
        echo "Or connect this repo to AWS Amplify for automatic deployments"
